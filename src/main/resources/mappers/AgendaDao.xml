<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.oha.laboa.dao.AgendaDao">
    <sql id="tableName">agenda</sql>
    <insert id="save" parameterType="team.oha.laboa.model.AgendaDo" useGeneratedKeys="true" keyProperty="agendaId">
        INSERT INTO  <include refid="tableName"/>
        (owner_id, title, type, next_time,quantity,unit, remark, open, update_time, create_time)
        VALUE (#{ownerId},#{title},#{type},#{nextTime},#{quantity},#{unit},#{remark},#{open},#{updateTime},#{createTime})
    </insert>

    <delete id="deleteBatch" parameterType="team.oha.laboa.vo.AgendaBatchVo">
        DELETE FROM <include refid="tableName"/>
        WHERE agenda_id IN <foreach collection="agendaIds" item="agendaId" open="(" close=")" separator=",">#{agendaId}</foreach>
        AND owner_id = #{userId}
    </delete>

    <update id="openBatch" parameterType="team.oha.laboa.vo.AgendaBatchVo">
        UPDATE <include refid="tableName"/>
        SET open = 1
        WHERE agenda_id IN <foreach collection="agendaIds" item="agendaId" open="(" close=")" separator=",">#{agendaId}</foreach>
        AND owner_id = #{userId} AND open = 0 AND next_time &gt; #{nowTime}
    </update>

    <update id="closeBatch" parameterType="team.oha.laboa.vo.AgendaBatchVo">
        UPDATE <include refid="tableName"/>
        SET open = 0
        WHERE agenda_id IN <foreach collection="agendaIds" item="agendaId" open="(" close=")" separator=",">#{agendaId}</foreach>
        AND owner_id = #{userId} AND open = 1
    </update>

    <update id="update" parameterType="team.oha.laboa.model.AgendaDo">
        UPDATE <include refid="tableName"/>
        <set>
            <if test="nextTime != null">next_time=#{nextTime},</if>
            <if test="quantity != null">quantity=#{quantity},</if>
            <if test="remark != null">remark=#{remark},</if>
            <if test="title != null">title=#{title},</if>
            <if test="updateTime != null">update_time=#{updateTime},</if>
            <if test="unit != null">unit=#{unit},</if>
        </set>
        WHERE agenda_id = #{agendaId}
    </update>

    <select id="listNeedGenerateItemAgenda" resultType="team.oha.laboa.model.AgendaDo">
        SELECT * FROM <include refid="tableName"/>
        WHERE open = 1 AND next_time NOT IN
        (
        SELECT summary_time FROM agenda_item
        WHERE agenda_item.agenda_id = <include refid="tableName"/>.agenda_id
        )
    </select>

    <select id="listNeedReGenerateItemAgenda" resultType="team.oha.laboa.model.AgendaDo" parameterType="java.time.LocalDateTime">
        SELECT * FROM <include refid="tableName"/>
        WHERE open = 1 AND next_time &lt; #{nowTime}
    </select>

    <sql id="conditions">
        <if test="filterQuery!=null">
            <where>
                <if test="filterQuery.agendaId">AND agenda.agenda_id = #{filterQuery.agendaId}</if>
                <if test="filterQuery.ownerName">AND user.username LIKE concat('%', #{filterQuery.ownerName}, '%')</if>
                <if test="filterQuery.title">AND agenda.title LIKE concat('%', #{filterQuery.title}, '%')</if>
                <if test="filterQuery.remark">AND agenda.remark LIKE concat('%', #{filterQuery.remark}, '%')</if>
                <if test="filterQuery.updateTimeBegin">AND agenda.update_time &gt;= #{filterQuery.updateTimeBegin}</if>
                <if test="filterQuery.updateTimeEnd">AND agenda.update_time &lt;= #{filterQuery.updateTimeEnd}</if>
                <if test="filterQuery.createTimeBegin">AND agenda.create_time &gt;= #{filterQuery.createTimeBegin}</if>
                <if test="filterQuery.createTimeEnd">AND agenda.create_time &lt;= #{filterQuery.createTimeEnd}</if>
                <if test="filterQuery.nextTimeBegin">AND agenda.next_time &gt;= #{filterQuery.nextTimeBegin}</if>
                <if test="filterQuery.nextTimeEnd">AND agenda.next_time &lt;= #{filterQuery.nextTimeEnd}</if>
                <if test="filterQuery.type">AND agenda.type = #{filterQuery.type}</if>
                <if test="filterQuery.units">AND agenda.unit in
                    <foreach collection="filterQuery.units" open="(" close=")" item="unit" separator=",">#{unit}</foreach>
                </if>
                <if test="filterQuery.quantity">AND agenda.quantity = #{filterQuery.quantity}</if>
                <if test="filterQuery.open">AND agenda.open = #{filterQuery.open}</if>
                <if test="filterQuery.status">
                    AND agenda_summary.status = #{filterQuery.status} AND agenda_item.summary_time &lt;= #{filterQuery.nowTime}
                </if>
            </where>
        </if>
    </sql>

    <sql id="page">
        <if test="pageQuery!=null">
            LIMIT ${pageQuery.offset},${pageQuery.rows}
        </if>
    </sql>

    <sql id="order">
        <if test="orderQuery!=null">
            ORDER BY ${@team.oha.laboa.util.CaseFormatUtil@lowerCamelToLowerUnderScore(orderQuery.field.name())} ${orderQuery.order}
        </if>
    </sql>

    <resultMap id="agendaMap" type="team.oha.laboa.dto.AgendaDto">
        <id column="agenda_id" property="agendaId"/>
        <result column="owner_name" property="ownerName"/>
        <result column="title" property="title"/>
        <result column="type" property="type"/>
        <result column="next_time" property="nextTime"/>
        <result column="quantity" property="quantity"/>
        <result column="unit" property="unit"/>
        <result column="remark" property="remark"/>
        <result column="open" property="open"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
        <result column="cooperation_id" property="cooperationId"/>
        <collection property="memberList" column="cooperation_agenda_id" ofType="java.lang.Integer" javaType="java.util.ArrayList" select="findMemberByCooperationId"/>
    </resultMap>

    <select id="findMemberByCooperationId" resultType="team.oha.laboa.dto.ParticipantAvailableDto" parameterType="java.lang.Integer">
        SELECT
        cooperation_member.member_id AS member_id,
        user.username AS username,
        userinfo.name AS name,
        userinfo.employee_number AS employee_number
        FROM cooperation_member
        JOIN cooperation_agenda_participant ON cooperation_agenda_participant.member_id = cooperation_member.member_id
        AND cooperation_agenda_participant.cooperation_agenda_id = #{id}
        JOIN user ON user.user_id =cooperation_member.user_id
        JOIN userinfo ON userinfo.user_id = user.user_id
    </select>

    <select id="list" parameterType="team.oha.laboa.query.agenda.AgendaSelectQuery" resultMap="agendaMap">
        SELECT DISTINCT
        user.username AS owner_name,
        agenda.agenda_id AS agenda_id,
        agenda.title AS title,
        agenda.type AS type,
        agenda.next_time AS next_time,
        agenda.quantity AS quantity,
        agenda.unit AS unit,
        agenda.remark AS remark,
        agenda.open AS open,
        agenda.update_time AS update_time,
        agenda.create_time AS create_time,
        cooperation_agenda.cooperation_id AS cooperation_id,
        cooperation_agenda.cooperation_agenda_id AS cooperation_agenda_id
        FROM <include refid="tableName"/> JOIN user ON user.user_id = agenda.owner_id
        <if test="filterQuery.ownerId!=null">AND user.user_id = #{filterQuery.ownerId}</if>
        <if test="filterQuery.summarizerId!=null or filterQuery.status!=null">
        JOIN agenda_item ON agenda.agenda_id = agenda_item.agenda_id
        JOIN agenda_summary ON agenda_item.item_id = agenda_summary.item_id
        </if>
        <if test="filterQuery.summarizerId!=null">
        AND agenda_summary.summarizer_id = #{filterQuery.summarizerId}
        </if>
        JOIN cooperation_agenda ON cooperation_agenda.agenda_id = <include refid="tableName"/>.agenda_id
        <if test="filterQuery.cooperationId!=null">
            AND cooperation_agenda.cooperation_id = #{filterQuery.cooperationId}
        </if>
        <include refid="conditions"/>
        <include refid="order"/>
        <include refid="page"/>
    </select>

    <select id="count" parameterType="team.oha.laboa.query.agenda.AgendaFilterQuery" resultType="java.lang.Integer">
        <bind name="filterQuery" value="_parameter"/>
        SELECT COUNT(DISTINCT(agenda.agenda_id))
        FROM <include refid="tableName"/>  JOIN user ON user.user_id = agenda.owner_id
        <if test="filterQuery.ownerId!=null">AND user.user_id = #{filterQuery.ownerId}</if>
        <if test="filterQuery.summarizerId!=null or filterQuery.status!=null">
            JOIN agenda_item ON agenda.agenda_id = agenda_item.agenda_id
            JOIN agenda_summary ON agenda_item.item_id = agenda_summary.item_id
        </if>
        <if test="filterQuery.summarizerId!=null">
        AND agenda_summary.summarizer_id = #{filterQuery.summarizerId}
        </if>
        <if test="filterQuery.cooperationId!=null">
            JOIN cooperation_agenda ON cooperation_agenda.agenda_id = <include refid="tableName"/>.agenda_id
            AND cooperation_agenda.cooperation_id = #{filterQuery.cooperationId}
        </if>
        <include refid="conditions"/>
    </select>



    <resultMap id="agendaDetailMap" type="team.oha.laboa.dto.AgendaDetailDto">
        <id column="agenda_id" property="agendaId"/>
        <result column="owner_username" property="ownerName"/>
        <result column="title" property="title"/>
        <result column="type" property="type"/>
        <result column="next_time" property="nextTime"/>
        <result column="quantity" property="quantity"/>
        <result column="unit" property="unit"/>
        <result column="remark" property="remark"/>
        <result column="open" property="open"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
        <collection property="itemList" ofType="team.oha.laboa.dto.AgendaItemDetailDto">
            <id column="item_id" property="itemId"/>
            <result column="preset_time" property="summaryTime"/>
            <collection property="summaryList" ofType="team.oha.laboa.dto.AgendaSummaryDetailDto">
                <id column="summary_id" property="summaryId"/>
                <result column="summarizer_username" property="username"/>
                <result column="status" property="status"/>
                <result column="content" property="content"/>
                <result column="actual_time" property="summaryTime"/>
            </collection>
        </collection>
    </resultMap>

    <select id="getAgendaDetail" parameterType="java.lang.Integer" resultMap="agendaDetailMap">
        SELECT
        <include refid="tableName"/>.agenda_id AS agenda_id,
        owner.username AS owner_username,
        <include refid="tableName"/>.title AS title,
        <include refid="tableName"/>.type AS type,
        <include refid="tableName"/>.next_time AS next_time,
        <include refid="tableName"/>.quantity AS quantity,
        <include refid="tableName"/>.unit AS unit,
        <include refid="tableName"/>.remark AS remark,
        <include refid="tableName"/>.open AS open,
        <include refid="tableName"/>.update_time AS update_time,
        <include refid="tableName"/>.create_time AS create_time,
        agenda_item.item_id AS item_id,
        agenda_item.summary_time AS preset_time,
        agenda_summary.summary_id AS summary_id,
        summarizer.username AS summarizer_username,
        agenda_summary.status AS status,
        agenda_summary.content AS content,
        agenda_summary.summary_time AS actual_time
        FROM <include refid="tableName"/>
        JOIN user AS owner ON owner.user_id = <include refid="tableName"/>.owner_id
        JOIN agenda_item ON agenda_item.agenda_id = agenda.agenda_id
        JOIN agenda_summary ON agenda_summary.item_id = agenda_item.item_id
        JOIN user as summarizer ON summarizer.user_id = agenda_summary.summarizer_id
        ORDER BY preset_time ASC, summarizer_username ASC
    </select>
</mapper>