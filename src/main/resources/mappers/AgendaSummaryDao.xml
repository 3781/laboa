<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.oha.laboa.dao.AgendaSummaryDao">
    <sql id="tableName">agenda_summary</sql>
    <insert id="save" parameterType="team.oha.laboa.model.AgendaSummaryDo" useGeneratedKeys="true" keyProperty="summaryId">
        INSERT INTO  <include refid="tableName"/>
        (item_id, summarizer_id, status)
        VALUE (#{itemId},#{summarizerId}, #{status})
    </insert>

    <update id="update" parameterType="team.oha.laboa.model.AgendaSummaryDo">
        UPDATE <include refid="tableName"/>
        <set>
            <if test="content != null">content=#{content},</if>
            <if test="summaryTime != null">summary_time=#{summaryTime},</if>
            <if test="status != null">status=#{status},</if>
        </set>
        WHERE summary_id = #{summaryId} and summarizer_id = #{summarizerId}
    </update>

    <resultMap id="agendaToDoMap" type="team.oha.laboa.dto.AgendaToDoDto">
        <id column="agenda_id" property="agendaId"/>
        <result column="title" property="title"/>
        <result column="date" property="date"/>
        <result column="summary_time" property="summaryTime"/>
        <association property="agendaSummary" column="summary_id" javaType="team.oha.laboa.dto.AgendaSummaryDto">
            <id column="summary_id" property="summaryId"/>
            <result column="content" property="content"/>
            <result column="status" property="status"/>
        </association>
    </resultMap>

    <select id="listToDo" parameterType="team.oha.laboa.query.agenda.AgendaToDoQuery" resultMap="agendaToDoMap">
        SELECT
        agenda.agenda_id AS agenda_id,
        agenda.title as title,
        agenda_item.summary_time as date,
        agenda_item.summary_time as summary_time,
        <include refid="tableName"/>.summary_id AS summary_id,
        <include refid="tableName"/>.content AS content,
        <include refid="tableName"/>.status AS status
        FROM <include refid="tableName"/>
        JOIN agenda_item ON agenda_item.item_id = <include refid="tableName"/>.item_id
        JOIN agenda ON agenda.agenda_id = agenda_item.agenda_id
        JOIN user ON user.user_id = <include refid="tableName"/>.summarizer_id
        WHERE user.username = #{username} AND agenda.open = 1 AND <include refid="tableName"/>.status = 'todo'
        AND date_format(agenda_item.summary_time,'%Y-%m')=date_format(#{targetDate},'%Y-%m')
        ORDER BY agenda_item.summary_time asc
    </select>

    <insert id="generatePersonalSummary" useGeneratedKeys="true">
        INSERT INTO agenda_summary(item_id, summarizer_id, status)
        SELECT agenda_item.item_id, agenda.owner_id, 'todo'
        FROM agenda_summary
        RIGHT JOIN agenda_item ON agenda_item.item_id = agenda_summary.item_id
        JOIN agenda ON agenda_item.agenda_id = agenda.agenda_id AND agenda_item.summary_time = agenda.next_time AND agenda.open = 1 AND agenda.type = 'personal'
        WHERE agenda_summary.summary_id IS NULL
    </insert>
    <insert id="generateCooperationSummary">
        INSERT INTO agenda_summary(item_id, summarizer_id, status)
        SELECT agenda_item.item_id, cooperation_member.user_id, 'todo'
        FROM cooperation_agenda
        JOIN agenda ON agenda.agenda_id = cooperation_agenda.agenda_id AND agenda.open = 1 AND agenda.type = 'cooperation'
        JOIN agenda_item ON agenda_item.agenda_id = agenda.agenda_id AND agenda_item.summary_time = agenda.next_time
        JOIN cooperation_agenda_participant ON cooperation_agenda_participant.cooperation_agenda_id = cooperation_agenda.cooperation_agenda_id
        JOIN cooperation_member ON cooperation_agenda_participant.member_id = cooperation_member.member_id
        ON DUPLICATE KEY UPDATE status = status
    </insert>
    <delete id="cleanCooperationSummary">
        DELETE FROM agenda_summary
        WHERE agenda_summary.summarizer_id NOT IN
        (
            SELECT
                t.user_id
            FROM
                (
                    SELECT DISTINCT
                        (cooperation_member.user_id) AS user_id
                    FROM
                        agenda_summary
                    JOIN agenda_item ON agenda_item.item_id = agenda_summary.item_id
                    JOIN agenda ON agenda.agenda_id = agenda_item.agenda_id
                    AND agenda. OPEN = 1
                    AND agenda.type = 'cooperation'
                    AND agenda_item.summary_time = agenda.next_time
                    JOIN cooperation_agenda ON agenda.agenda_id = cooperation_agenda.agenda_id
                    JOIN cooperation_agenda_participant ON cooperation_agenda_participant.cooperation_agenda_id = cooperation_agenda.cooperation_agenda_id
                    JOIN cooperation_member ON cooperation_member.member_id = cooperation_agenda_participant.member_id
                ) AS t
	    )
    </delete>
</mapper>